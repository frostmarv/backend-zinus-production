# ===========================================
# ZINUS BACKEND - ENVIRONMENT CONFIGURATION
# ===========================================
# 
# ðŸš€ QUICK SETUP:
# 1. npm run env:dev      (Development - SQLite)
# 2. npm run env:railway  (Railway.com - PostgreSQL)  
# 3. npm run start:dev
#
# ðŸ“– Panduan lengkap: ENV_GUIDE.md
# ===========================================

# Application Environment
NODE_ENV=development
PORT=5000

# ===========================================
# DATABASE CONFIGURATION
# ===========================================

# Database Type (sqlite | postgres)
DB_TYPE=postgres

# Database Synchronization (true | false)
# WARNING: Set to false in production!
DB_SYNC=false

# Database Logging (true | false)
DB_LOGGING=false

# ===========================================
# POSTGRESQL CONFIGURATION (for production)
# ===========================================

# PostgreSQL Connection URL (Render provides this automatically)
DATABASE_URL=postgresql://username:password@hostname:port/database

# Alternative: Individual PostgreSQL settings
# PGHOST=localhost
# PGPORT=5432
# PGUSER=postgres
# PGPASSWORD=your_password
# PGDATABASE=zinus_production

# ===========================================
# SQLITE CONFIGURATION (for development)
# ===========================================

# SQLite Database Path
SQLITE_PATH=dev.sqlite

# ===========================================
# CORS CONFIGURATION
# ===========================================

# Allowed Origins (comma-separated)
# For production, specify your frontend domains
ALLOWED_ORIGINS=https://your-frontend-domain.com,https://www.your-frontend-domain.com

# For development
# ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001

# ===========================================
# SECURITY CONFIGURATION
# ===========================================

# JWT Secret (if you add authentication later)
# JWT_SECRET=your-super-secret-jwt-key

# API Rate Limiting (requests per minute)
# RATE_LIMIT=100

# ===========================================
# LOGGING CONFIGURATION
# ===========================================

# Log Level (error | warn | info | debug)
LOG_LEVEL=info

# ===========================================
# RENDER.COM SPECIFIC
# ===========================================

# Render automatically provides these:
# - DATABASE_URL (for PostgreSQL)
# - PORT (usually 10000)
# - NODE_ENV (set to production)

# You need to manually set these in Render dashboard:
# - DB_TYPE=postgres
# - DB_SYNC=false
# - DB_LOGGING=false
# - ALLOWED_ORIGINS=your-frontend-domains